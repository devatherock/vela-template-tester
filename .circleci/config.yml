template_tester_image: &template_tester_image
  docker:
    - image: devatherock/vela-template-tester:latest
      auth:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
    
orbs:
  docker: circleci/docker@1.5.0
  
work_directory: &work_directory
  working_directory: ~/vela-template-tester

resource_class: &resource_class
  resource_class: small
  
release_filter: &release_filter
  filters:
    branches:
      only: non-existent-branch
    tags:
      only: /^v[0-9\.]+$/

executors:
  docker-executor:
    docker:
      - image: cimg/go:1.14
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    <<: *resource_class
    <<: *work_directory
  machine-executor:
    machine:
      image: ubuntu-2204:2023.04.2
    resource_class: medium
    <<: *work_directory

version: 2.1
jobs:
  test:
    executor: docker-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-pkg-cache-{{ checksum "go.mod" }}
            - v1-pkg-cache
      - run: make check

  build:
    executor: docker-executor
    environment:
      CGO_ENABLED: 0
      GOOS: linux
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-pkg-cache-{{ checksum "go.mod" }}
            - v1-pkg-cache
      - run: |
          make coveralls
          make build-all
      - save_cache:
          paths:
            - "/go/pkg"
          key: v1-pkg-cache-{{ checksum "go.mod" }}
      - persist_to_workspace:
          root: ~/vela-template-tester
          paths:
            - bin
            
  integration_test:
    executor: docker-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/vela-template-tester
      - restore_cache:
          keys:
            - v1-pkg-cache-{{ checksum "go.mod" }}
            - v1-pkg-cache
      - run: |
          make integration-test

  publish:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/vela-template-tester
      - run: |
          TAG=${CIRCLE_SHA1:0:8}
          docker build -t devatherock/vela-template-tester-api:$TAG -f build/Api.Dockerfile .
          docker tag devatherock/vela-template-tester-api:$TAG devatherock/vela-template-tester-api:latest
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker push devatherock/vela-template-tester-api:$TAG
          docker push devatherock/vela-template-tester-api:latest
          
  dockerhub_readme:
    executor: machine-executor
    parameters:
      docker_image:
        type: string
      image_type:
        type: string
    steps:
      - checkout
      - run: |
          docker run -v $PWD:/workspace \
              -e DOCKERHUB_USERNAME \
              -e DOCKERHUB_PASSWORD \
              -e DOCKERHUB_REPOSITORY='devatherock/<< parameters.docker_image >>' \
              -e SHORT_DESCRIPTION='<< parameters.image_type >> to test and validate vela-ci templates' \
              -e README_FILEPATH='/workspace/README.md' \
              peterevans/dockerhub-description:3.4.1

  test_plugin_single:
    <<: *template_tester_image
    <<: *resource_class
    <<: *work_directory
    environment:
      PARAMETER_INPUT_FILE: "test/testdata/input_template.yml"
      PARAMETER_VARIABLES: '{"notification_branch":"develop","notification_event":"push"}'
      PARAMETER_EXPECTED_OUTPUT: "test/testdata/output_template.yml"
      PARAMETER_LOG_LEVEL: debug
    steps:
      - checkout
      - attach_workspace:
          at: ~/vela-template-tester
      - run: /bin/velatemplatetesterplugin

  test_plugin_list:
    <<: *template_tester_image
    <<: *resource_class
    <<: *work_directory
    environment:
      PARAMETER_TEMPLATES: '[{"input_file":"test/testdata/input_template.yml","variables":{"notification_branch":"develop","notification_event":"push"},"expected_output":"test/testdata/output_template.yml"}]'
    steps:
      - checkout
      - attach_workspace:
          at: ~/vela-template-tester
      - run: /bin/velatemplatetesterplugin

  functional_test:
    executor: machine-executor
    parameters:
      command_args:
        type: string
    steps:
      - checkout
      - run: |
          make << parameters.command_args >>
            
  release:
    executor: docker-executor
    parameters:
      docker_image:
        type: string
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/vela-template-tester
      - run: |
          TAG=${CIRCLE_TAG#v}
          DEV_TAG=${CIRCLE_SHA1:0:8}
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker pull devatherock/<< parameters.docker_image >>:$DEV_TAG
          docker tag devatherock/<< parameters.docker_image >>:$DEV_TAG devatherock/<< parameters.docker_image >>:$TAG
          docker push devatherock/<< parameters.docker_image >>:$TAG
          
  deploy:
    executor: docker-executor
    <<: *resource_class
    steps:
      - run:
          name: Trigger deployment to render.com
          command: |
            curl $RENDER_DEPLOY_HOOK
            
  notify:
    docker:
      - image: devatherock/simple-slack:0.7.0
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    <<: *resource_class
    environment:
      TEXT: "Success: {{.CircleBuildUrl}} by {{.CircleUsername}}"
      CHANNEL: general
      TITLE: "Build completed"
    steps:
      - run: /bin/simpleslack -c "#33ad7f"            

workflows:
  version: 2.1
  build_deploy:
    jobs:
      - build:
          context:
            - docker-credentials
          filters:
            branches:
              only: master
      - integration_test:
          context:
            - docker-credentials
          requires:
            - build
      - publish:
          context:
            - docker-credentials
          requires:
            - integration_test
      - docker/publish:
          name: publish_plugin
          executor: docker-executor
          context:
            - docker-credentials
          requires:
            - integration_test
          image: devatherock/vela-template-tester
          attach-at: ~/vela-template-tester
          tag: "${CIRCLE_SHA1:0:8},latest"
          use-remote-docker: true
          docker-username: DOCKER_USERNAME
          dockerfile: build/Plugin.Dockerfile
      - dockerhub_readme:
          name: dockerhub_readme_api
          context:
            - docker-credentials
            - dockerhub-readme-credentials
          docker_image: 'vela-template-tester-api'
          image_type: 'API'
          requires:
            - publish
      - dockerhub_readme:
          name: dockerhub_readme_plugin
          context:
            - docker-credentials
            - dockerhub-readme-credentials
          docker_image: 'vela-template-tester'
          image_type: 'Plugin'
          requires:
            - publish_plugin
      - test_plugin_single:
          context:
            - docker-credentials
          requires:
            - dockerhub_readme_plugin
      - test_plugin_list:
          context:
            - docker-credentials
          requires:
            - dockerhub_readme_plugin
      - functional_test:
          name: functional_test_api
          context:
            - docker-credentials
          command_args: 'functional-test-api'
          requires:
            - dockerhub_readme_api
      - functional_test:
          name: functional_test_plugin
          context:
            - docker-credentials
          command_args: 'functional-test-plugin'
          requires:
            - test_plugin_single
            - test_plugin_list
      - notify:
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - functional_test_api
            - functional_test_plugin

  release_api:
    jobs:
      - release:
          name: release_api
          context:
            - docker-credentials
          docker_image: vela-template-tester-api
          <<: *release_filter
      - deploy:
          context:
            - docker-credentials
          <<: *release_filter
          requires:
            - release_api
      - notify:
          context:
            - docker-credentials
            - slack-webhook
          <<: *release_filter
          requires:
            - deploy
            
  release_plugin:
    jobs:
      - release:
          name: release_plugin
          context:
            - docker-credentials
          docker_image: vela-template-tester
          <<: *release_filter
      - notify:
          context:
            - docker-credentials
            - slack-webhook
          <<: *release_filter
          requires:
            - release_plugin
            
  pr_check:
    jobs:
      - test:
          context:
            - docker-credentials
          filters:
            branches:
              ignore: master
