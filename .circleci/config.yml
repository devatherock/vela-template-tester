template_tester_image: &template_tester_image
  docker:
    - image: devatherock/vela-template-tester:latest
      auth:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
    
orbs:
  docker: circleci/docker@1.5.0
  heroku: circleci/heroku@1.0.1
  
work_directory: &work_directory
  working_directory: ~/vela-template-tester

resource_class: &resource_class
  resource_class: small
  
executors:
  docker-executor:
    docker:
      - image: circleci/golang:1.14
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    <<: *resource_class
    <<: *work_directory

version: 2.1
jobs:
  test:
    executor: docker-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-pkg-cache-{{ checksum "go.mod" }}
            - v1-pkg-cache
      - run: make check

  build:
    executor: docker-executor
    environment:
      CGO_ENABLED: 0
      GOOS: linux
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-pkg-cache-{{ checksum "go.mod" }}
            - v1-pkg-cache
      - run: make build-api
      - save_cache:
          paths:
            - "/go/pkg"
          key: v1-pkg-cache-{{ checksum "go.mod" }}
      - persist_to_workspace:
          root: ~/vela-template-tester
          paths:
            - docker/velatemplatetesterapi
  build_plugin:
    executor: docker-executor
    environment:
      CGO_ENABLED: 0
      GOOS: linux
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-pkg-cache-{{ checksum "go.mod" }}
            - v1-pkg-cache
      - run: |
          make coveralls
          make build-plugin
      - save_cache:
          paths:
            - "/go/pkg"
          key: v1-pkg-cache-{{ checksum "go.mod" }}
      - persist_to_workspace:
          root: ~/vela-template-tester
          paths:
            - docker/velatemplatetesterplugin

  publish:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/vela-template-tester
      - run: |
          TAG=${CIRCLE_SHA1:0:8}
          docker build -t devatherock/vela-template-tester-api:$TAG -f docker/Api.Dockerfile docker
          docker tag devatherock/vela-template-tester-api:$TAG devatherock/vela-template-tester-api:latest
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker push devatherock/vela-template-tester-api:$TAG
          docker push devatherock/vela-template-tester-api:latest

  test_plugin_single:
    <<: *template_tester_image
    <<: *resource_class
    <<: *work_directory
    environment:
      PARAMETER_INPUT_FILE: "templates/input_template.yml"
      PARAMETER_VARIABLES: '{"notification_branch":"develop","notification_event":"push"}'
      PARAMETER_EXPECTED_OUTPUT: "templates/output_template.yml"
      PARAMETER_LOG_LEVEL: debug
    steps:
      - checkout
      - attach_workspace:
          at: ~/vela-template-tester
      - run: /bin/velatemplatetesterplugin

  test_plugin_list:
    <<: *template_tester_image
    <<: *resource_class
    <<: *work_directory
    environment:
      PARAMETER_TEMPLATES: '[{"input_file":"templates/input_template.yml","variables":{"notification_branch":"develop","notification_event":"push"},"expected_output":"templates/output_template.yml"}]'
    steps:
      - checkout
      - attach_workspace:
          at: ~/vela-template-tester
      - run: /bin/velatemplatetesterplugin

  deploy:
    executor: heroku/default
    <<: *resource_class
    <<: *work_directory
    steps:
      - checkout
      - heroku/install
      - setup_remote_docker
      - attach_workspace:
          at: ~/vela-template-tester
      - run:
          name: Build and push the docker image to registry.heroku.com
          command: |
            docker build -t registry.heroku.com/vela-template-tester/web -f docker/Api.Dockerfile docker
            heroku container:login
            docker push registry.heroku.com/vela-template-tester/web
            heroku container:release -a vela-template-tester web
            
  release_api:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/vela-template-tester
      - run: |
          TAG=${CIRCLE_TAG#v}
          DEV_TAG=${CIRCLE_SHA1:0:8}
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker pull devatherock/vela-template-tester-api:$DEV_TAG
          docker tag devatherock/vela-template-tester-api:$DEV_TAG devatherock/vela-template-tester-api:$TAG
          docker push devatherock/vela-template-tester-api:$TAG
          
  release_plugin:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/vela-template-tester
      - run: |
          TAG=${CIRCLE_TAG#v}
          DEV_TAG=${CIRCLE_SHA1:0:8}
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker pull devatherock/vela-template-tester:$DEV_TAG
          docker tag devatherock/vela-template-tester:$DEV_TAG devatherock/vela-template-tester:$TAG
          docker push devatherock/vela-template-tester:$TAG          
            
  notify:
    docker:
      - image: devatherock/simple-slack:0.5.0
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    <<: *resource_class
    environment:
      TEXT: "Success: {{.CircleBuildUrl}} by {{.CircleUsername}}"
      CHANNEL: general
      TITLE: "Build completed"
    steps:
      - run: /bin/simpleslack -c "#33ad7f"            

workflows:
  version: 2.1
  build_deploy:
    jobs:
      - build:
          context:
            - docker-credentials
          filters:
            branches:
              only: master
      - publish:
          context:
            - docker-credentials
          requires:
            - build
      - deploy:
          context:
            - docker-credentials
            - heroku-credentials
          requires:
            - publish
      - notify:
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - deploy         
            
  create_plugin:
    jobs:
      - build_plugin:
          context:
            - docker-credentials
          filters:
            branches:
              only: master
      - docker/publish:
          name: publish_plugin
          executor: docker-executor
          context:
            - docker-credentials
          requires:
            - build_plugin
          image: devatherock/vela-template-tester
          attach-at: ~/vela-template-tester
          tag: "${CIRCLE_SHA1:0:8},latest"
          use-remote-docker: true
          docker-username: DOCKER_USERNAME
          dockerfile: docker/Plugin.Dockerfile
          docker-context: docker
      - test_plugin_single:
          context:
            - docker-credentials
          requires:
            - publish_plugin
      - test_plugin_list:
          context:
            - docker-credentials
          requires:
            - publish_plugin
      - notify:
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - test_plugin_single
            - test_plugin_list
            
  release_api:
    jobs:
      - release_api:
          context:
            - docker-credentials
          filters:
            branches:
              only: non-existent-branch
            tags:
              only: /^v[0-9\.]+$/
      - notify:
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - release_api
            
  release_plugin:
    jobs:
      - release_plugin:
          context:
            - docker-credentials
          filters:
            branches:
              only: non-existent-branch
            tags:
              only: /^v[0-9\.]+$/        
      - notify:
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - release_plugin
            
  pr_check:
    jobs:
      - test:
          context:
            - docker-credentials
          filters:
            branches:
              ignore: master
